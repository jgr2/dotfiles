#!/bin/sh

# Basic extensions for posix mv(1p)

PROGRAM_NAME="mv"

create=  # create target directory if not exists
verbose= # print operations

options=  # standard options to mv(1p) (-if)
target=  # target directory
tbase=   # target directory basename

OPTIND=
ret=

while getopts ":vcifm:r:-:" opt
do
	case "$opt" in
	-)
		case in "$OPTARG"
		create)
			create=1
			;;
		match)
			match="$OPTARG"
			;;
		replace)
			replace="$OPTARG"
			;;
		esac
		;;
	c)
		create=1
		;;
	v)
		verbose=1
		;;
	m)
		match="$OPTARG"
		;;
	r)
		replace="$OPTARG"
		;;
	:)
		echo "$PROGRAM_NAME: $OPTARG requires argument"
		;;
# this won't work, requires white-listing lot's of options, let's not go there
#while getopts ":vcifm:r:-:" opt
#	f)
#		options="$options -f"
#		;;
#	i)
#		options="$options -i"
#		;;
#	\?)
#		cat >&2 <<USAGE
#$PROGRAM_NAME: unknown option -- $OPTARG
#usage: $PROGRAM_NAME [-ficv] source targe
#       $PROGRAM_NAME [-ficv] source ... directory
#USAGE
#		exit 1
#		;;
	esac
done
shift $(($OPTIND - 1))

if [ $# -gt 2 ]
then
	eval target='$'$#
	if ! [ -d "$target" ]
	then
		tbase="$(basename $target)"

		if [ "$create" = "1" ]
		then
			mkdir $tbase && echo "created '$tbase/'"
		fi

		set -- ${@%"$target"}
	fi

	if [ -n "$match" ]
	then
		dests=
		set -- $(
			for src
			do
				echo $src | grep "$match";
			done
		)

		if [ -n "$replace" && ]
		then
			for src
			do
				dest="$(echo $src | sed "/$match/$src/")"
				if mv "$options" "$src" "$tbase/$dest"
				then
					echo "'$src' -> '$tbase/$dest'"
				else
					exit $?
				fi
			done
			exit 0
		fi
	fi
fi

mv $options $@

r=$?
if [ "$r" = "0" ] && [ "$verbose" = "1" ]
then
	if [ $# -gt 2 ]
	then
		for src in ${@%$target}
		do
			echo "'$src' -> '$tbase/$src'"
		done
	else
		echo "'$1' -> '$2'"
	fi
fi

exit $r

