#!/bin/sh

PROGRAM_NAME="mv"

verbose=0
create=0
match=""
replace=""

options=

argument_required () {
	echo "$PROGRAM_NAME: option requires argument -- '$1'" >&2
	exit 1
}

while getopts ":vcm:r:-:" opt
do
	case $opt in
		-)
			case "$OPTARG" in
				verbose)
					verbose=1
					;;
				create)
					create=1
					;;
				match)
					match="${OPTARG#*=}"
					;;
				replace)
					replace="${OPTARG#*=}"
					;;
				match|replace)
					argument_required "$OPTARG"
					;;
				*)
					options="$options --$OPTARG"
					;;
			esac
			;;
		v)
			verbose=1
			;;
		c)
			create=1
			;;
		m)
			match="$OPTARG"
			;;
		r)
			replace="$OPTARG"
			;;
		:)
			argument_required "$OPTARG"
			;;
		?)
			options="$options -$OPTARG"
			;;

	esac
done

shift $(($OPTIND - 1))

eval target='$'$#
tbase="$(basename $target)"

if [ ! -d "$target" -a ! -e "$target" -a $create -eq 1 ]
then
	if ! mkdir "$target"
	then
		exit $?
	elif [ $verbose -eq 1 ]
	then
		echo "created '$target'"
	fi
fi

if [ -e "$target" ]
then
	if [ -d "$target" ]
	then
		# pop target
		set -- ${@%"$target"}
	else
		# treat target as source file
		target=
		tbase="."
	fi
fi

if [ -n "$match" ]
then
	# filter srcs
	set -- $(for src; do echo $src | grep "$match"; done)

	if [ -n "$replace" ]
	then
		for src
		do
			dest="$(echo $src | sed "s/$match/$replace/")"
			if ! mv $options "$src" "$target/$dest"
			then
				echo "$PROGRAM_NAME: mv failed: '$src' -> '$target/$dest'" >&2
				exit $?
			else
				if [ $verbose -eq 1 ]
				then
					echo "'$src' -> '$target/$dest'"
				fi
			fi
		done
		exit 0
	fi
fi

if ! mv $options $@ "$target"
then
	exit $?
else
	if [ $verbose -eq 1 ]
	then
		if [ -n "$target" ]
		then
			for src
			do
				echo "'$src' -> '$target/$src'"
			done
		else
			echo "'$1' -> '$2'"
		fi
	fi
fi

exit 0

